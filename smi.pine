//@version=5
indicator('Stochastic Momentum Index', shorttitle='SMI')

q = input.int(title='Stochastic Lookback', defval=13, minval=1)
r = input.int(title='1st Smoothing Length', defval=25, minval=1)
s = input.int(title='2nd Smoothing Length', defval=2, minval=1)
signalLength = input.int(title='Signal Length', defval=12, minval=1)
obLevel = input(title='Overbought Level', defval=40)
osLevel = input(title='Oversold Level', defval=-40)
maxLevel = input(title='Max Level', defval=75)
minLevel = input(title='Min Level', defval=-75)
src = input(title='Source', defval=close)
showHistogram = input(title='Show Histogram ?', defval=false)
highlightBreakouts = input(title='Highlight Overbought/Oversold Breakouts ?', defval=true)
highlightCrossovers = input(title='Highlight SMI/Signal Crossovers ?', defval=false)
highlightZeroCrossovers = input(title='Highlight Zero Line Crossovers ?', defval=false)
applyFilling = input(title='Apply Ribbon Filling ?', defval=false)

hh = ta.highest(q)
ll = ta.lowest(q)

numerator = ta.ema(ta.ema(src - 0.5 * (hh + ll), r), s)
denominator = 0.5 * ta.ema(ta.ema(hh - ll, r), s)

smi = 100 * numerator / denominator
signal = ta.ema(smi, signalLength)

hist = smi - signal
histColor = hist >= 0 ? hist[1] < hist ? #26A69A : #B2DFDB : hist[1] < hist ? #FFCDD2 : #EF5350
plot(showHistogram ? hist : na, title='Histogram', style=plot.style_columns, color=histColor, transp=0)

trendColor = smi > signal ? #0ebb23 : color.red
smiColor = applyFilling ? trendColor : #ff3e7d
signalColor = applyFilling ? trendColor : #3c78d8

smiPlot = plot(smi, title='SMI', color=smiColor, transp=0)
signalPlot = plot(signal, title='Signal', color=signalColor, transp=0)

transparent = color.new(color.white, 100)

maxLevelPlot = hline(maxLevel, title='Max Level', linestyle=hline.style_dotted, color=transparent)
obLevelPlot = hline(obLevel, title='Overbought Level', linestyle=hline.style_dotted, color=#00796b)
hline(0, title='Zero Level', linestyle=hline.style_dotted, color=#989898)
osLevelPlot = hline(osLevel, title='Oversold Level', linestyle=hline.style_dotted, color=#f57f17)
minLevelPlot = hline(minLevel, title='Min Level', linestyle=hline.style_dotted, color=transparent)
fill(obLevelPlot, osLevelPlot, color=color.new(color.purple, 95))

obFillColor = smi > obLevel and highlightBreakouts ? color.green : transparent
osFillColor = smi < osLevel and highlightBreakouts ? color.red : transparent

fill(maxLevelPlot, obLevelPlot, color=obFillColor, transp=85)
fill(minLevelPlot, osLevelPlot, color=osFillColor, transp=85)

fillColor = applyFilling ? trendColor : transparent
fill(smiPlot, signalPlot, color=fillColor, transp=70)

zeroCrossBgColor = highlightZeroCrossovers ? smi > 0 ? color.green : color.red : transparent
bgcolor(zeroCrossBgColor, transp=90)

plotshape(highlightCrossovers and ta.crossover(smi, signal) ? smi : na, title='Crossover', location=location.absolute, style=shape.circle, size=size.tiny, color=color.new(color.green, 0))
plotshape(highlightCrossovers and ta.crossunder(smi, signal) ? smi : na, title='Crossunder', location=location.absolute, style=shape.circle, size=size.tiny, color=color.new(color.red, 0))

